ParseOk
  ( Module
      SrcSpanInfo
        { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 1 1 4 1
        , srcInfoPoints =
            [ SrcSpan "tests/examples/THTSplices.hs" 1 1 1 1
            , SrcSpan "tests/examples/THTSplices.hs" 2 1 2 1
            , SrcSpan "tests/examples/THTSplices.hs" 2 1 2 1
            , SrcSpan "tests/examples/THTSplices.hs" 2 1 2 1
            , SrcSpan "tests/examples/THTSplices.hs" 3 1 3 1
            , SrcSpan "tests/examples/THTSplices.hs" 4 1 4 1
            , SrcSpan "tests/examples/THTSplices.hs" 4 1 4 1
            ]
        }
      Nothing
      [ LanguagePragma
          SrcSpanInfo
            { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 1 1 1 33
            , srcInfoPoints =
                [ SrcSpan "tests/examples/THTSplices.hs" 1 1 1 13
                , SrcSpan "tests/examples/THTSplices.hs" 1 30 1 33
                ]
            }
          [ Ident
              SrcSpanInfo
                { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 1 14 1 29
                , srcInfoPoints = []
                }
              "TemplateHaskell"
          ]
      ]
      [ ImportDecl
          { importAnn =
              SrcSpanInfo
                { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 2 1 2 27
                , srcInfoPoints =
                    [ SrcSpan "tests/examples/THTSplices.hs" 2 1 2 7 ]
                }
          , importModule =
              ModuleName
                SrcSpanInfo
                  { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 2 8 2 27
                  , srcInfoPoints = []
                  }
                "Language.Haskell.TH"
          , importQualified = False
          , importSrc = False
          , importSafe = False
          , importPkg = Nothing
          , importAs = Nothing
          , importSpecs = Nothing
          }
      ]
      [ PatBind
          SrcSpanInfo
            { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 1 3 33
            , srcInfoPoints = []
            }
          (PVar
             SrcSpanInfo
               { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 1 3 5
               , srcInfoPoints = []
               }
             (Ident
                SrcSpanInfo
                  { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 1 3 5
                  , srcInfoPoints = []
                  }
                "main"))
          (UnGuardedRhs
             SrcSpanInfo
               { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 6 3 33
               , srcInfoPoints =
                   [ SrcSpan "tests/examples/THTSplices.hs" 3 6 3 7 ]
               }
             (ExpTypeSig
                SrcSpanInfo
                  { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 8 3 33
                  , srcInfoPoints =
                      [ SrcSpan "tests/examples/THTSplices.hs" 3 18 3 20 ]
                  }
                (Var
                   SrcSpanInfo
                     { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 8 3 17
                     , srcInfoPoints = []
                     }
                   (UnQual
                      SrcSpanInfo
                        { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 8 3 17
                        , srcInfoPoints = []
                        }
                      (Ident
                         SrcSpanInfo
                           { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 8 3 17
                           , srcInfoPoints = []
                           }
                         "undefined")))
                (TySplice
                   SrcSpanInfo
                     { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 21 3 33
                     , srcInfoPoints =
                         [ SrcSpan "tests/examples/THTSplices.hs" 3 21 3 23
                         , SrcSpan "tests/examples/THTSplices.hs" 3 32 3 33
                         ]
                     }
                   (ParenSplice
                      SrcSpanInfo
                        { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 21 3 33
                        , srcInfoPoints =
                            [ SrcSpan "tests/examples/THTSplices.hs" 3 21 3 23
                            , SrcSpan "tests/examples/THTSplices.hs" 3 32 3 33
                            ]
                        }
                      (Var
                         SrcSpanInfo
                           { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 23 3 32
                           , srcInfoPoints = []
                           }
                         (UnQual
                            SrcSpanInfo
                              { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 23 3 32
                              , srcInfoPoints = []
                              }
                            (Ident
                               SrcSpanInfo
                                 { srcInfoSpan = SrcSpan "tests/examples/THTSplices.hs" 3 23 3 32
                                 , srcInfoPoints = []
                                 }
                               "undefined")))))))
          Nothing
      ]
  , []
  )
